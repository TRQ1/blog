<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- the location of global.properties's file -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="locations" value="WEB-INF/global.properties"/>
    </beans:bean>

	<beans:bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
	
	<!-- Create Interceptor -->
    <beans:bean id="sessionHandlerInterceptor" class="com.q1.blog.utils.SessionHandlerInterceptor">
    </beans:bean>
    <!-- Set Interceptor -->
    <interceptors>
        <interceptor>
            <mapping path="/admin/**"/>
            <exclude-mapping path="/admin/post/**"/>
            <exclude-mapping path="/admin/login/**"/>
            <beans:ref bean="sessionHandlerInterceptor"/>
        </interceptor>
    </interceptors>	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/**" location="/resources/blog/" />
	<resources mapping="/admin/**" location="/resources/admin/" />
    <resources mapping="/test/**" location="/resources/blog/" />
	<resources mapping="/resources/**" location="/resources/" />
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.q1.blog" />
	
	<!-- DataSource Setting -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <beans:property name="driverClassName" value="${jdbc.driverClassName}" />
	    <beans:property name="url" value="${jdbc.url}" />
	    <beans:property name="username" value="${jdbc.username}" />
	    <beans:property name="password" value="${jdbc.password}" />
	</beans:bean>
	
	<!-- TransatctionManager setting -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<!-- SessionFactory bean setting -->	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <beans:property name="dataSource" ref="dataSource" />
	    <beans:property name="typeAliasesPackage" value="com.q1.blog" />
	    <beans:property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>
	    <beans:property name="mapperLocations" value="classpath*:com/q1/blog/dao/sqlmapper/*.xml" />
	</beans:bean>

	<!-- SessionTemplate setting -->	
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>
<!--	<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" /> -->
	<beans:bean id="userVo" class="com.q1.blog.vo.UserVo"></beans:bean>
	<beans:bean id="userDao" class="com.q1.blog.dao.UserDaoIpml">
		<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>

	<beans:bean id="postVo" class="com.q1.blog.vo.PostVo"></beans:bean>
	<beans:bean id="postDao" class="com.q1.blog.dao.PostDaoIpml">
		<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>
	
	<beans:bean id="commentVo" class="com.q1.blog.vo.CommentVo"></beans:bean>
	<beans:bean id="commentDao" class="com.q1.blog.dao.CommentDaoIpml">
		<beans:property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</beans:bean>
</beans:beans>
